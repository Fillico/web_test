{
  "uid" : "2ca21ef671cc2a8c",
  "name" : "test_invest_success",
  "fullName" : "TestCases.test_invest.TestInvestPage#test_invest_success",
  "historyId" : "2ee945e6a254127f6ede8ffae220c91d",
  "time" : {
    "start" : 1561889629282,
    "stop" : 1561889707633,
    "duration" : 78351
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <TestCases.test_invest.TestInvestPage testMethod=test_invest_success>\n\n    @pytest.mark.smoke\n    def test_invest_success(self):\n        logging.info(\"======投资用例：正常场景-投资成功\")\n        before_invest = self.bid_page.get_user_left_money()\n        self.bid_page.invest(ID.invest_success_data[\"invest_money\"])\n>       self.bid_page.click_activeButton_on_success_popup()  # 点击查看并激活按钮\n\nTestCases\\test_invest.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject\\bid_page.py:35: in click_activeButton_on_success_popup\n    self.click_element(loc.bid_success_look_btn, \"标页面_投资成功提示框_点击查看并激活\")\nCommon\\basepage.py:56: in click_element\n    self.wait_eleVisible(loc, img_doc, timeout, frequency)\nCommon\\basepage.py:31: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cbb4d42b4f20da789149d180b489a02e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000000C1727B5EB8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\_0_0_lyx_ceshi\\python35\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session_action",
    "time" : {
      "start" : 1561889395830,
      "stop" : 1561889395830,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup",
    "time" : {
      "start" : 1561889395848,
      "stop" : 1561889454785,
      "duration" : 58937
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <TestCases.test_invest.TestInvestPage testMethod=test_invest_success>\n\n    @pytest.mark.smoke\n    def test_invest_success(self):\n        logging.info(\"======投资用例：正常场景-投资成功\")\n        before_invest = self.bid_page.get_user_left_money()\n        self.bid_page.invest(ID.invest_success_data[\"invest_money\"])\n>       self.bid_page.click_activeButton_on_success_popup()  # 点击查看并激活按钮\n\nTestCases\\test_invest.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nPageObject\\bid_page.py:35: in click_activeButton_on_success_popup\n    self.click_element(loc.bid_success_look_btn, \"标页面_投资成功提示框_点击查看并激活\")\nCommon\\basepage.py:56: in click_element\n    self.wait_eleVisible(loc, img_doc, timeout, frequency)\nCommon\\basepage.py:31: in wait_eleVisible\n    WebDriverWait(self.driver, timeout, frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cbb4d42b4f20da789149d180b489a02e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x000000C1727B5EB8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\_0_0_lyx_ceshi\\python35\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "b0bb568d00838aa5",
      "name" : "log",
      "source" : "b0bb568d00838aa5.txt",
      "type" : "text/plain",
      "size" : 473
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "session_action::0",
    "time" : {
      "start" : 1561889759766,
      "stop" : 1561889759766,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "_UnitTestCase__pytest_class_setup::0",
    "time" : {
      "start" : 1561889707718,
      "stop" : 1561889710379,
      "duration" : 2661
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "suite",
    "value" : "test_invest"
  }, {
    "name" : "subSuite",
    "value" : "TestInvestPage"
  }, {
    "name" : "parentSuite",
    "value" : "TestCases"
  }, {
    "name" : "host",
    "value" : "G50-75M"
  }, {
    "name" : "thread",
    "value" : "15668-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "TestCases.test_invest"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "smoke" ]
  },
  "source" : "2ca21ef671cc2a8c.json",
  "parameterValues" : [ ]
}